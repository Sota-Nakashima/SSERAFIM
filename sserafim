#!/bin/bash

# get conda init path
###################################
conda_path=`which conda`
conda_path_array=(${conda_path//\// })
list_number=$((${#conda_path_array[*]}-3))
for S in $(seq 0 $list_number); do
    CONDA_INIT_PATH+="/${conda_path_array[$S]}"
done

CONDA_INIT_PATH+="/etc/profile.d/conda.sh"
echo $conda_init_path

###################################
readonly SCRIPT_NAME=${0##*/}
readonly VERSION=0.1.1

print_help()
{
    cat << END

 ████  ████  ████  ████     █    ████  ██  ██    ██
 █     █     █     █   █   ███   █     █   ██    ██
 █     █     █     █   █   █ █   █     █   ███  ███
 ██    ██    ████  █   █   █ █   ████  █   █ █  █ █
   ██    ██  █     ████   █   █  █     █   █ █  █ █
    ██    ██ █     █  █   █████  █     █   █  ██  █
    █     █  █     █   █  █   ██ █     █   █  ██  █
 ████  ████  ████  █   █ █     █ █     ██  █  ██  █

This program is integrating process of RNASeq analyze and specify to ncRNA.
Inside of this program,sra-tools,trim-galore,fastqc,multiqc,fastp,hisat2 and stringtie is moving.
If you want to choose another parameters in each process, please rewrite programs by yourself.

Example
    sserafim [OPTION] [-s SRA_LIST_PATH] [-p 10] 
    [-g GENOME_REFERENCE_PATH] [-a GENOME_ANNOTATION_PATH]

OPTION
-o OUTPUT_DIR       set output directory(default: ./SSERAFIM)

#########################################################
CAUTION : YOU HAVE TO SET THESE PARAMETERS ABSOLUTELY!!
>>better absolute path than relative path<<
#########################################################
-s SRA_LIST_PATH (.txt)                                         
-g REFERENCE_GENOME_PATH (.fasta/fasta.gz)                      
-a GENOME_ANNOTATION_PATH (.gff3 or .gtf/.gff3.gz or .gtf.gz) 
#########################################################


-c CONDA_INIT_PATH  if printed error "you have to check ...",please reset path.
                    "~/{YOUR CONDA PACKAGE}/etc/profile.d/conda.sh"
-p PARALLEL (int)   set using CPU core(default: 1)
-f TRIM_OPTION      change trimming software into fastp (default: trim-galore)
-h HELP             show help                 
-V VERSION          shoe version

##################
RESULT_DIRECTORY
##################
OUTPUT_DIR
│
├─── result
│       ├─── ballgrown
│       ├─── gff
│       ├─── multiqc
│       └─── tsv
├─── (caution_report_multiqc.tsv)
└─── law_data.tar.gz (This directory is very large size. Please warn when decompressing.)
If you don't set option "-f" and fasta file quality is not good, sserafim output "caution_report_multiqc.tsv".
Please check when you analyze results.
END
}

print_short_help()
{
    cat << END
Example
    sserafim [OPTION] [-s SRA_LIST_PATH] [-p 10] 
    [-g GENOME_REFERENCE_PATH] [-a GENOME_ANNOTATION_PATH]

OPTION
-o OUTPUT_DIR       set output directory(default: ./SSERAFIM)

#########################################################
CAUTION : YOU HAVE TO SET THESE PARAMETERS ABSOLUTELY!!
>>better absolute path than relative path<<
#########################################################
-s SRA_LIST_PATH (.txt)                                         
-g REFERENCE_GENOME_PATH (.fasta/fasta.gz)                      
-a GENOME_ANNOTATION_PATH (.gff3 or .gtf/.gff3.gz or .gtf.gz) 
#########################################################


-c CONDA_INIT_PATH  if printed error "you have to check ...",please reset path.
                    "~/{YOUR CONDA PACKAGE}/etc/profile.d/conda.sh"
-p PARALLEL (int)   set using CPU core(default: 1)
-f TRIM_OPTION      change trimming software into fastp (default: trim-galore)
-h HELP             show help                 
-V VERSION          shoe version
END
}
print_version()
{
    cat << END
$SCRIPT_NAME version $VERSION
END
}

print_error()
{
    cat << END 1>&2
$SCRIPT_NAME: $1
Try -h option for more information
END
}

SCRIPT_DIR=$(cd $(dirname $0); pwd)
OUTPUT_DIR="./SSERAFIM"
SET_SRA_LIST_PATH=false
SET_REFERENCE_GENOME_PATH=false
SET_GENOME_ANNOTATION_PATH=false
TRIM_OPTION=trim_galore
PARALLEL=1

while getopts :o:s:p:g:c:a:fhV option
do
    case "$option" in
        o)
            OUTPUT_DIR=$OPTARG
            ;;
        s)
            SRA_LIST_PATH=$OPTARG
            SET_SRA_LIST_PATH=true
            ;;
        g)
            REFERENCE_GENOME_PATH=$OPTARG
            SET_REFERENCE_GENOME_PATH=true
            ;;
        a)
            GENOME_ANNOTATION_PATH=$OPTARG
            SET_GENOME_ANNOTATION_PATH=true
            ;;
        c)
            CONDA_INIT_PATH=$OPTARG
            ;;
        p)
            PARALLEL=$OPTARG
            ;;
        f)
            TRIM_OPTION=fastp
            ;;
        h)
            print_help
            exit 0
            ;;
        V)
            print_version
            exit 0
            ;;
        :)
            print_error "option requires an argument -- '$OPTARG'"
            exit 1
            ;;
        \?)
            print_error "unrecognized option -- '$OPTARG'"
            exit 1
            ;;
    esac
done

if [[ "${SET_SRA_LIST_PATH}" != "true" || "${SET_REFERENCE_GENOME_PATH}" != "true" || "${SET_GENOME_ANNOTATION_PATH}" != "true" ]] ; then
    printf '%s\n' "${SCRIPT_NAME}: need more option" 1>&2
    print_short_help
    exit 1
fi

if [[ ! -e $SRA_LIST_PATH || ! -e $REFERENCE_GENOME_PATH || ! -e $GENOME_ANNOTATION_PATH ]] ; then
    printf '%s\n' "${SCRIPT_NAME}: options path is not exist." 1>&2
    print_short_help
    exit 1
fi

if [[ ! -e $CONDA_INIT_PATH ]] ; then
    printf '%s\n' "${SCRIPT_NAME}: you have to check CONDA_INIT_PATH. please use -c option." 1>&2
    print_short_help
    exit 1
fi

#########################################

if [[ -d "$OUTPUT_DIR" ]] ; then
    printf '%s\n' "${SCRIPT_NAME}: the same directory is already exist." 1>&2
    exit 1
fi
#better mkdir -p ?

mkdir -p "$OUTPUT_DIR"

#prefetch
bash $SCRIPT_DIR/script/sra_download.sh $CONDA_INIT_PATH $OUTPUT_DIR $SRA_LIST_PATH $PARALLEL

##########################################
#fasterq-dump
bash $SCRIPT_DIR/script/fasterq_dump.sh $CONDA_INIT_PATH $OUTPUT_DIR $PARALLEL

if [[ $TRIM_OPTION == "trim_galore" ]] ; then
    #trim-galore
    bash $SCRIPT_DIR/script/trim_galore.sh $CONDA_INIT_PATH $OUTPUT_DIR $PARALLEL

elif [[ $TRIM_OPTION == "fastp" ]] ; then
    #fastp
    bash $SCRIPT_DIR/script/fastp.sh $CONDA_INIT_PATH $OUTPUT_DIR $SRA_LIST_PATH $PARALLEL

fi

#fastqc
bash $SCRIPT_DIR/script/fastqc.sh $CONDA_INIT_PATH $OUTPUT_DIR $PARALLEL

#multiqc
bash $SCRIPT_DIR/script/multiqc_trim_galore.sh $CONDA_INIT_PATH $OUTPUT_DIR

#multiqc_report
bash $SCRIPT_DIR/script/multiqc_report.sh $CONDA_INIT_PATH $OUTPUT_DIR $SCRIPT_DIR

#judge binary
REFERENCE_GENOME_PATH_BINARY=false
GENOME_ANNOTATION_PATH_BINARY=false

a=$(file --mime "$REFERENCE_GENOME_PATH" | grep "charset=binary")
if [ -n "$a" ]; then 
    REFERENCE_GENOME_PATH_BINARY=true
fi

b=$(file --mime "$GENOME_ANNOTATION_PATH" | grep "charset=binary")
if [ -n "$b" ]; then 
    GENOME_ANNOTATION_PATH_BINARY=true
fi

#decompress reference
REFERENCE_GENOME_PATH=`bash $SCRIPT_DIR/script/decompress.sh $CONDA_INIT_PATH $REFERENCE_GENOME_PATH $PARALLEL`
GENOME_ANNOTATION_PATH=`bash $SCRIPT_DIR/script/decompress.sh $CONDA_INIT_PATH $GENOME_ANNOTATION_PATH $PARALLEL`
#
#hisat2
bash $SCRIPT_DIR/script/hisat.sh $CONDA_INIT_PATH $OUTPUT_DIR $PARALLEL $REFERENCE_GENOME_PATH $SRA_LIST_PATH

#samtools
bash $SCRIPT_DIR/script/samtools.sh $CONDA_INIT_PATH $OUTPUT_DIR $PARALLEL $SRA_LIST_PATH

#stringtie
bash $SCRIPT_DIR/script/stringtie.sh $CONDA_INIT_PATH $OUTPUT_DIR $SRA_LIST_PATH $GENOME_ANNOTATION_PATH $PARALLEL

#compress refernece
if [[ "$REFERENCE_GENOME_PATH_BINARY" == "true" ]] ; then
    bash $SCRIPT_DIR/script/compress.sh $CONDA_INIT_PATH $REFERENCE_GENOME_PATH $PARALLEL
fi

if [[ "$GENOME_ANNOTATION_PATH_BINARY" == "true" ]] ; then
    bash $SCRIPT_DIR/script/compress.sh $CONDA_INIT_PATH $GENOME_ANNOTATION_PATH $PARALLEL
fi

#archive
bash $SCRIPT_DIR/script/archive.sh $CONDA_INIT_PATH $OUTPUT_DIR $PARALLEL